{"version":3,"sources":["components/product-card/index.js","components/product-card/product-card.js","components/App.js","index.js"],"names":["ProductCard","this","props","name","description","furniture_style","delivery_time","price","className","toLocaleString","join","data-tip","type","effect","Component","App","state","isLoading","products","filteredProducts","furnitureStyles","deliveryTime","filterOptions","getDeliveryTime","visited","forEach","indexOf","push","key","value","text","sort","a","b","handleFilter","Object","keys","filterValue","filter","p","toLowerCase","includes","parseInt","setState","fetch","then","res","json","data","furniture_styles","catch","e","console","log","result","onChange","fsValue","getFilterOptionsFS","length","map","product","fpIndex","FilterSection","placeholder","target","readOnly","fsName","htmlFor","Checkbox","id","Select","options","currentTarget","querySelector","innerText","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5928f29.chunk.js","sourcesContent":["import ProductCard from \"./product-card\";\n\nexport default ProductCard;\n","import React, { Component } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./product-card.css\";\n\nclass ProductCard extends Component {\n    render() {\n        const {\n            name = \"\",\n            description = \"\",\n            furniture_style = \"\",\n            delivery_time = \"\",\n            price = \"\"\n        } = this.props;\n        return (\n            <div className=\"pc__container\">\n                <div className=\"pc__header\">\n                    <title className=\"pc__name\">{name}</title>\n                    <strong className=\"pc__price\">\n                        {price ? `Rp ${price.toLocaleString()}` : \"\"}\n                    </strong>\n                </div>\n                <p className=\"pc__desc\">{description}</p>\n                <p className=\"pc__furniture_styles\">\n                    {furniture_style.join(\", \")}\n                </p>\n                <div className=\"pc__footer\">\n                    <p className=\"pc__delivery_days\" data-tip=\"Delivery Days\">\n                        {delivery_time}\n                    </p>\n                    <ReactTooltip type=\"info\" effect=\"solid\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductCard;\n","import React, { Component } from \"react\";\nimport { Select, Checkbox } from \"semantic-ui-react\";\n\nimport ProductCard from \"./product-card\";\n\nimport \"./App.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass App extends Component {\n    state = {\n        isLoading: true,\n        products: [],\n        filteredProducts: [],\n        furnitureStyles: [],\n        deliveryTime: []\n    };\n\n    filterOptions = {};\n\n    componentDidMount() {\n        const productsUrl = \"https://www.mocky.io/v2/5c9105cb330000112b649af8\";\n        fetch(productsUrl)\n            .then(res => res.json())\n            .then(data => {\n                const deliveryTime = this.getDeliveryTime(data.products);\n\n                this.setState({\n                    isLoading: false,\n                    products: data.products || [],\n                    filteredProducts: data.products || [],\n                    furnitureStyles: data.furniture_styles || [],\n                    deliveryTime\n                });\n            })\n            .catch(e => console.log(`ERROR: ${e}`));\n    }\n\n    getDeliveryTime = products => {\n        const deliveryTime = [],\n            visited = [];\n        if (products) {\n            products.forEach(({ delivery_time }) => {\n                if (visited.indexOf(delivery_time) === -1) {\n                    visited.push(delivery_time);\n                    deliveryTime.push({\n                        key: `dt_${delivery_time}`,\n                        value: delivery_time,\n                        text: `${delivery_time} week`\n                    });\n                }\n            });\n        }\n\n        deliveryTime.sort((a, b) => a.value - b.value);\n        return deliveryTime;\n    };\n\n    handleFilter = ({ name, value }) => {\n        const { products } = this.state;\n\n        /** setting up filterOptions */\n        switch (name) {\n            case \"keyword\":\n                this.filterOptions[name] = value;\n                break;\n            case \"deliveryTime\":\n                this.filterOptions[name] = value;\n                break;\n            default:\n                if (!this.filterOptions[name]) {\n                    this.filterOptions[name] = \"true\";\n                } else {\n                    delete this.filterOptions[name];\n                }\n                break;\n        }\n\n        /** filter products based on filterOptions */\n        let filteredProducts = products;\n        Object.keys(this.filterOptions).forEach(key => {\n            const filterValue = this.filterOptions[key];\n            switch (key) {\n                case \"keyword\":\n                    filteredProducts = filteredProducts.filter(p =>\n                        p.name.toLowerCase().includes(filterValue.toLowerCase())\n                    );\n                    break;\n                case \"deliveryTime\":\n                    filteredProducts = filteredProducts.filter(\n                        p =>\n                            parseInt(p.delivery_time, 10) <=\n                            parseInt(filterValue, 10)\n                    );\n                    break;\n                default:\n                    filteredProducts = filteredProducts.filter(p => {\n                        return p.furniture_style.includes(key);\n                    });\n                    break;\n            }\n        });\n\n        this.setState({\n            filteredProducts\n        });\n    };\n\n    getFilterOptionsFS() {\n        const result = [];\n        Object.keys(this.filterOptions).forEach(key => {\n            if (key !== \"keyword\" && key !== \"deliveryTime\") {\n                result.push(key);\n            }\n        });\n\n        return result.join(\", \");\n    }\n\n    render() {\n        const {\n            isLoading,\n            filteredProducts,\n            furnitureStyles,\n            deliveryTime\n        } = this.state;\n\n        return (\n            <div className=\"App\">\n                <FilterSection\n                    deliveryTime={deliveryTime}\n                    furnitureStyles={furnitureStyles}\n                    onChange={this.handleFilter}\n                    fsValue={this.getFilterOptionsFS()}\n                />\n                {filteredProducts.length > 0 || isLoading ? (\n                    filteredProducts.map((product, fpIndex) => (\n                        <ProductCard key={fpIndex} {...product} />\n                    ))\n                ) : (\n                    <h3 className=\"empty__result\">Oops, Nothing matches </h3>\n                )}\n            </div>\n        );\n    }\n}\n\nconst FilterSection = ({\n    deliveryTime,\n    furnitureStyles,\n    onChange,\n    fsValue\n}) => (\n    <div className=\"filter_section\">\n        <input\n            className=\"f__furniture_name\"\n            placeholder=\"Search Furniture\"\n            onChange={e =>\n                onChange({\n                    name: \"keyword\",\n                    value: e.target.value\n                })\n            }\n        />\n        <form className=\"f__furniture_style_form\">\n            <input\n                className=\"f__furniture_style\"\n                placeholder=\"Furniture Style\"\n                value={fsValue}\n                readOnly\n            />\n            <ul>\n                {furnitureStyles.map(fsName => (\n                    <li key={fsName}>\n                        <label htmlFor={fsName}>{fsName}</label>\n                        <Checkbox\n                            id={fsName}\n                            onChange={() =>\n                                onChange({\n                                    name: fsName,\n                                    value: null\n                                })\n                            }\n                        />\n                    </li>\n                ))}\n            </ul>\n        </form>\n        <Select\n            className=\"f__furniture_dt\"\n            placeholder=\"Delivery Time\"\n            options={deliveryTime}\n            onChange={e => {\n                onChange({\n                    name: \"deliveryTime\",\n                    value: e.currentTarget\n                        .querySelector(\"span\")\n                        .innerText.replace(/\\s|week$/g, \"\")\n                });\n            }}\n        />\n    </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}